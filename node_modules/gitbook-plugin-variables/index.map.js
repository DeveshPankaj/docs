{"version":3,"sources":["webpack://gitbookPluginVariables/webpack/universalModuleDefinition","webpack://gitbookPluginVariables/webpack/bootstrap","webpack://gitbookPluginVariables/./src/index.ts","webpack://gitbookPluginVariables/external \"fast-glob\"","webpack://gitbookPluginVariables/external \"fs-extra\"","webpack://gitbookPluginVariables/external \"js-yaml\"","webpack://gitbookPluginVariables/external \"lodash\"","webpack://gitbookPluginVariables/external \"native-require\"","webpack://gitbookPluginVariables/external \"path\""],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","glob","fs_extra_1","js_yaml_1","lodash_1","nativeRequire","path_1","async","loadFileList","fileOrList","required","mustBeObject","contentRoot","files","undefined","isArray","toArray","cwd","length","Error","JSON","stringify","contents","Promise","all","map","file","absolutePath","match","ensureObject","safeLoad","readFile","loadFile","resolve","reduce","memo","isPlainObject","assign","blocks","filters","hooks","init","this","bookConfig","config","values","pluginConfig","defaults","pluginsConfig","variables","variablesToAdd","each","set","require"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gitbookPluginVariables\"] = factory();\n\telse\n\t\troot[\"gitbookPluginVariables\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as glob from 'fast-glob';\nimport { readFile } from 'fs-extra';\nimport { safeLoad as parseYaml } from 'js-yaml';\nimport { assign, defaults, each, isArray, isPlainObject, reduce } from 'lodash';\nimport * as nativeRequire from 'native-require';\nimport { resolve as resolvePath } from 'path';\n\nexport const blocks = {};\nexport const filters = {};\nexport const hooks = { init };\n\ninterface GitBookHook {\n  config: GitBookConfig;\n  resolve(path: string): string;\n}\n\ninterface GitBookConfig {\n  values: GitBookConfigValues;\n  get(key: string): any;\n  set(key: string, value: any): void;\n}\n\ninterface GitBookConfigValues {\n  pluginsConfig: GitBookPluginsConfig;\n}\n\ninterface GitBookPluginsConfig {\n  variables: { [key: string]: any };\n  [key: string]: any;\n}\n\nasync function init(this: GitBookHook) {\n\n  const contentRoot = this.resolve('.');\n  const bookConfig = this.config.values;\n  const pluginConfig = defaults({}, bookConfig.pluginsConfig.variables, {\n    files: {}\n  });\n\n  const variablesToAdd = {};\n\n  const files = pluginConfig.files;\n  if (typeof files === 'string' || isArray(files)) {\n    assign(variablesToAdd, await loadFileList(files, true, true, contentRoot));\n  } else {\n    each(pluginConfig.files, (value, key) => {\n      variablesToAdd[key] = loadFileList(value, true, false, contentRoot);\n    });\n\n    for (const key in variablesToAdd) {\n      variablesToAdd[key] = await variablesToAdd[key];\n    }\n  }\n\n  this.config.set('variables', { ...this.config.get('variables'), ...variablesToAdd });\n}\n\nasync function loadFile(absolutePath: string, mustBeObject: boolean) {\n  if (absolutePath.match(/\\.ya?ml$/)) {\n    const contents = parseYaml(await readFile(absolutePath, 'utf8'));\n    return ensureObject(absolutePath, contents, mustBeObject);\n  } else if (absolutePath.match(/\\.js(?:on)?$/)) {\n    const contents = nativeRequire(absolutePath);\n    const resolvedContents = await (typeof contents === 'function' ? contents() : contents);\n    return ensureObject(absolutePath, resolvedContents, mustBeObject);\n  } else {\n    throw new Error(`Only .js, .json and .yml files are supported by the variables plugin: \"${absolutePath}\" is not a supported format`);\n  }\n}\n\nasync function loadFileList(fileOrList: string | string[], required: boolean, mustBeObject: boolean, contentRoot: string) {\n\n  const files = await glob<string>(toArray(fileOrList), { cwd: contentRoot });\n  if (required && !files.length) {\n    throw new Error(`No files to load were found matching ${JSON.stringify(fileOrList)}`);\n  }\n\n  const contents = await Promise.all(files.map(file => loadFile(resolvePath(contentRoot, file), mustBeObject)));\n\n  return reduce(contents, (memo, value) => {\n    if (isArray(memo) && isArray(value)) {\n      return [ ...memo, ...value ];\n    } else if (isPlainObject(memo) && isPlainObject(value)) {\n      return { ...memo, ...value };\n    } else {\n      return value;\n    }\n  });\n}\n\nfunction toArray<T>(value: T | T[]): T[] {\n  if (value === undefined) {\n    return [];\n  }\n\n  return isArray(value) ? value : [ value ];\n}\n\nfunction ensureObject(file: string, value: any, mustBeObject: boolean) {\n  if (mustBeObject && !isPlainObject(value)) {\n    throw new Error(`File \"${file}\" exports a value of type ${typeof value}, but a plain object is required`);\n  }\n\n  return value;\n}\n","module.exports = require(\"fast-glob\");","module.exports = require(\"fs-extra\");","module.exports = require(\"js-yaml\");","module.exports = require(\"lodash\");","module.exports = require(\"native-require\");","module.exports = require(\"path\");"],"sourceRoot":""}